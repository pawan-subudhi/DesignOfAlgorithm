//enter the number of elements u want to sort and the program will randomly generate that much number of elements onto a file then it will be copied to an array and 
//then sorting will be performed on the array 
#include<stdio.h>
#include<time.h>
#include<stdlib.h>
void merge(int arr[], int l, int m, int r)
{
    int i, j, k;
    int n1 = m - l + 1;
    int n2 =  r - m;
    int L[n1], R[n2];    
    for (i = 0; i < n1; i++)
        L[i] = arr[l + i];
    for (j = 0; j < n2; j++)
        R[j] = arr[m + 1+ j];
    i = 0;
    j = 0;
    k = l;
    while (i < n1 && j < n2)
    {
        if (L[i] <= R[j])
        {
            arr[k] = L[i];
            i++;
        }
        else
        {
            arr[k] = R[j];
            j++;
        }
        k++;
    }
    while (i < n1)
    {
        arr[k] = L[i];
        i++;
        k++;
    }
    while (j < n2)
    {
        arr[k] = R[j];
        j++;
        k++;
    }
}
void mergeSort(int arr[], int l, int r)
{
    if (l < r)
    {
        int m = l+(r-l)/2;
        mergeSort(arr, l, m);
        mergeSort(arr, m+1, r);
 
        merge(arr, l, m, r);
    }
}
void printArray(int arr[], int size)
{
    int i;
    for (i=0; i < size; i++)
        printf("%d ", arr[i]);
    printf("\n");
}
int main()
{
	FILE *fp;
	int i,max,temp,n=0;
	clock_t start,end;
	double cpu_time_speed;
	int *arr;
	printf("enter the number of elements that need to be sorted :: ");
	scanf("%d",&max);

	//generating max number of random numbers onto the file
	fp=fopen("sortingdata.txt","w");
	srand(time(0));
	for(i=0;i<max;i++)
		fprintf(fp,"%d\t",rand()%max);
	fclose(fp);
	
	//copying the contents of file onto array
	arr=(int*)malloc(n*sizeof(int));
	i=0;
	fp=fopen("sortingdata.txt","r");
	while(fscanf(fp,"%d",&temp)!=EOF)
	{
		arr[i]=temp;
		i++;
	}
	
	//performing sorting on array
	start=clock();
        mergeSort(arr,0, max-1);
	end=clock();

	//printing the sorted array
        printf("Sorted array: \n");
        printArray(arr, max);

	//calculating the cpu time for the sorting
	 cpu_time_speed=(double)(end-start)/CLOCKS_PER_SEC;
	printf("the cpu time to perform sorting is:: %lf", cpu_time_speed);
    return 0;
}